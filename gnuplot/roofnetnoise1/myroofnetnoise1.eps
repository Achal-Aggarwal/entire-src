%!PS-Adobe-2.0 EPSF-2.0
%%Title: roofnetnoise1.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Sat Aug  3 20:44:04 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 176 lineto 50 176 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (roofnetnoise1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (aman)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Aug  3 20:44:04 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 2520.00 BoxColFill} if
1.000 UL
LTb
980 640 M
63 0 V
5796 0 R
-63 0 V
stroke
860 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-100)]
] -66.7 MRshow
1.000 UL
LTb
980 913 M
63 0 V
5796 0 R
-63 0 V
stroke
860 913 M
[ [(Helvetica) 200.0 0.0 true true 0 (-95)]
] -66.7 MRshow
1.000 UL
LTb
980 1187 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1187 M
[ [(Helvetica) 200.0 0.0 true true 0 (-90)]
] -66.7 MRshow
1.000 UL
LTb
980 1460 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1460 M
[ [(Helvetica) 200.0 0.0 true true 0 (-85)]
] -66.7 MRshow
1.000 UL
LTb
980 1733 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1733 M
[ [(Helvetica) 200.0 0.0 true true 0 (-80)]
] -66.7 MRshow
1.000 UL
LTb
980 2007 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2007 M
[ [(Helvetica) 200.0 0.0 true true 0 (-75)]
] -66.7 MRshow
1.000 UL
LTb
980 2280 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2280 M
[ [(Helvetica) 200.0 0.0 true true 0 (-70)]
] -66.7 MRshow
1.000 UL
LTb
980 640 M
0 63 V
0 1577 R
0 -63 V
stroke
980 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1817 640 M
0 63 V
0 1577 R
0 -63 V
stroke
1817 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
1.000 UL
LTb
2654 640 M
0 63 V
0 1577 R
0 -63 V
stroke
2654 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MCshow
1.000 UL
LTb
3491 640 M
0 63 V
0 1577 R
0 -63 V
stroke
3491 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MCshow
1.000 UL
LTb
4328 640 M
0 63 V
0 1577 R
0 -63 V
stroke
4328 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 40)]
] -66.7 MCshow
1.000 UL
LTb
5165 640 M
0 63 V
0 1577 R
0 -63 V
stroke
5165 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 50)]
] -66.7 MCshow
1.000 UL
LTb
6002 640 M
0 63 V
0 1577 R
0 -63 V
stroke
6002 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 60)]
] -66.7 MCshow
1.000 UL
LTb
6839 640 M
0 63 V
0 1577 R
0 -63 V
stroke
6839 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 70)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
980 2280 N
980 640 L
5859 0 V
0 1640 V
-5859 0 V
Z stroke
LCb setrgbcolor
160 1460 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Silence level \(dBm\))]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
3909 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (Transmitter-Receiver pair num.)]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
4801 2180 M
[ [(Helvetica) 200.0 0.0 true true 0 (5%-ile)]
] -66.7 MRshow
LT0
1.00 0.00 0.00 C 4921 2180 M
543 0 V
980 640 M
84 109 V
83 0 V
84 110 V
84 0 V
84 0 V
83 54 V
84 0 V
84 -54 V
83 54 V
84 -109 V
84 109 V
83 0 V
84 55 V
84 0 V
84 -164 V
83 -55 V
84 164 V
84 0 V
83 55 V
84 55 V
84 0 V
83 -55 V
84 -109 V
84 164 V
84 -219 V
83 164 V
84 0 V
84 55 V
83 54 V
84 0 V
84 0 V
83 -109 V
84 55 V
84 54 V
84 0 V
83 55 V
84 0 V
84 0 V
83 0 V
84 0 V
84 0 V
83 0 V
84 -55 V
84 0 V
84 0 V
83 55 V
84 -55 V
84 55 V
83 0 V
84 0 V
84 -55 V
83 110 V
84 -55 V
84 0 V
84 0 V
83 0 V
84 0 V
84 55 V
83 54 V
84 -54 V
84 0 V
83 218 V
84 -273 V
980 640 Pls
1064 749 Pls
1147 749 Pls
1231 859 Pls
1315 859 Pls
1399 859 Pls
1482 913 Pls
1566 913 Pls
1650 859 Pls
1733 913 Pls
1817 804 Pls
1901 913 Pls
1984 913 Pls
2068 968 Pls
2152 968 Pls
2236 804 Pls
2319 749 Pls
2403 913 Pls
2487 913 Pls
2570 968 Pls
2654 1023 Pls
2738 1023 Pls
2821 968 Pls
2905 859 Pls
2989 1023 Pls
3073 804 Pls
3156 968 Pls
3240 968 Pls
3324 1023 Pls
3407 1077 Pls
3491 1077 Pls
3575 1077 Pls
3658 968 Pls
3742 1023 Pls
3826 1077 Pls
3910 1077 Pls
3993 1132 Pls
4077 1132 Pls
4161 1132 Pls
4244 1132 Pls
4328 1132 Pls
4412 1132 Pls
4495 1132 Pls
4579 1077 Pls
4663 1077 Pls
4747 1077 Pls
4830 1132 Pls
4914 1077 Pls
4998 1132 Pls
5081 1132 Pls
5165 1132 Pls
5249 1077 Pls
5332 1187 Pls
5416 1132 Pls
5500 1132 Pls
5584 1132 Pls
5667 1132 Pls
5751 1132 Pls
5835 1187 Pls
5918 1241 Pls
6002 1187 Pls
6086 1187 Pls
6169 1405 Pls
6253 1132 Pls
5192 2180 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT8
0.00 0.00 1.00 C LCb setrgbcolor
4801 1980 M
[ [(Helvetica) 200.0 0.0 true true 0 (Median \(50%-ile\))]
] -66.7 MRshow
LT8
0.00 0.00 1.00 C 4921 1980 M
543 0 V
980 640 M
84 219 V
83 0 V
84 54 V
84 0 V
84 0 V
83 55 V
84 0 V
84 0 V
83 0 V
84 55 V
84 0 V
83 0 V
84 0 V
84 0 V
84 0 V
83 0 V
84 0 V
84 0 V
83 0 V
84 54 V
84 0 V
83 0 V
84 0 V
84 0 V
84 0 V
83 0 V
84 0 V
84 0 V
83 55 V
84 0 V
84 0 V
83 0 V
84 0 V
84 0 V
84 0 V
83 55 V
84 0 V
84 0 V
83 0 V
84 0 V
84 0 V
83 0 V
84 0 V
84 0 V
84 0 V
83 0 V
84 0 V
84 0 V
83 0 V
84 0 V
84 0 V
83 54 V
84 0 V
84 0 V
84 0 V
83 0 V
84 0 V
84 55 V
83 0 V
84 0 V
84 109 V
83 55 V
84 273 V
980 640 TriUF
1064 859 TriUF
1147 859 TriUF
1231 913 TriUF
1315 913 TriUF
1399 913 TriUF
1482 968 TriUF
1566 968 TriUF
1650 968 TriUF
1733 968 TriUF
1817 1023 TriUF
1901 1023 TriUF
1984 1023 TriUF
2068 1023 TriUF
2152 1023 TriUF
2236 1023 TriUF
2319 1023 TriUF
2403 1023 TriUF
2487 1023 TriUF
2570 1023 TriUF
2654 1077 TriUF
2738 1077 TriUF
2821 1077 TriUF
2905 1077 TriUF
2989 1077 TriUF
3073 1077 TriUF
3156 1077 TriUF
3240 1077 TriUF
3324 1077 TriUF
3407 1132 TriUF
3491 1132 TriUF
3575 1132 TriUF
3658 1132 TriUF
3742 1132 TriUF
3826 1132 TriUF
3910 1132 TriUF
3993 1187 TriUF
4077 1187 TriUF
4161 1187 TriUF
4244 1187 TriUF
4328 1187 TriUF
4412 1187 TriUF
4495 1187 TriUF
4579 1187 TriUF
4663 1187 TriUF
4747 1187 TriUF
4830 1187 TriUF
4914 1187 TriUF
4998 1187 TriUF
5081 1187 TriUF
5165 1187 TriUF
5249 1187 TriUF
5332 1241 TriUF
5416 1241 TriUF
5500 1241 TriUF
5584 1241 TriUF
5667 1241 TriUF
5751 1241 TriUF
5835 1296 TriUF
5918 1296 TriUF
6002 1296 TriUF
6086 1405 TriUF
6169 1460 TriUF
6253 1733 TriUF
5192 1980 TriUF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT1
0.00 0.00 0.00 C LCb setrgbcolor
4801 1780 M
[ [(Helvetica) 200.0 0.0 true true 0 (95%-ile)]
] -66.7 MRshow
LT1
0.00 0.00 0.00 C 4921 1780 M
543 0 V
980 695 M
84 382 V
83 0 V
84 0 V
84 110 V
84 0 V
83 54 V
84 -54 V
84 164 V
83 -55 V
84 273 V
84 -164 V
83 55 V
84 -164 V
84 0 V
84 547 V
83 -274 V
84 -164 V
84 -54 V
83 -55 V
84 55 V
84 0 V
83 0 V
84 437 V
84 -437 V
84 328 V
83 -328 V
84 0 V
84 0 V
83 109 V
84 0 V
84 -55 V
83 55 V
84 -109 V
84 164 V
84 -110 V
83 55 V
84 0 V
84 0 V
83 0 V
84 0 V
84 55 V
83 -55 V
84 109 V
84 -54 V
84 0 V
83 -55 V
84 55 V
84 -110 V
83 -54 V
84 164 V
84 0 V
83 0 V
84 0 V
84 54 V
84 -109 V
83 164 V
84 -55 V
84 -54 V
83 0 V
84 54 V
84 164 V
83 -54 V
84 328 V
980 695 Crs
1064 1077 Crs
1147 1077 Crs
1231 1077 Crs
1315 1187 Crs
1399 1187 Crs
1482 1241 Crs
1566 1187 Crs
1650 1351 Crs
1733 1296 Crs
1817 1569 Crs
1901 1405 Crs
1984 1460 Crs
2068 1296 Crs
2152 1296 Crs
2236 1843 Crs
2319 1569 Crs
2403 1405 Crs
2487 1351 Crs
2570 1296 Crs
2654 1351 Crs
2738 1351 Crs
2821 1351 Crs
2905 1788 Crs
2989 1351 Crs
3073 1679 Crs
3156 1351 Crs
3240 1351 Crs
3324 1351 Crs
3407 1460 Crs
3491 1460 Crs
3575 1405 Crs
3658 1460 Crs
3742 1351 Crs
3826 1515 Crs
3910 1405 Crs
3993 1460 Crs
4077 1460 Crs
4161 1460 Crs
4244 1460 Crs
4328 1460 Crs
4412 1515 Crs
4495 1460 Crs
4579 1569 Crs
4663 1515 Crs
4747 1515 Crs
4830 1460 Crs
4914 1515 Crs
4998 1405 Crs
5081 1351 Crs
5165 1515 Crs
5249 1515 Crs
5332 1515 Crs
5416 1515 Crs
5500 1569 Crs
5584 1460 Crs
5667 1624 Crs
5751 1569 Crs
5835 1515 Crs
5918 1515 Crs
6002 1569 Crs
6086 1733 Crs
6169 1679 Crs
6253 2007 Crs
5192 1780 Crs
% End plot #3
1.000 UL
LTb
980 2280 N
980 640 L
5859 0 V
0 1640 V
-5859 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
