//sg
#include<iostream>
using namespace std;
template <class T>
struct Node
{
T data;
Node * next;
};
template <class T>
class LinkedList
{
Node<T> * head;
public : 
LinkedList()
{
head=NULL;
}
void addHead(T data);
void deleteHead();
void display();
};
template <class T>
void LinkedList<T>::addHead(T data)
{
Node<T>* newN;
newN->data=data;
newN->next=head;
head=newN;
}

template <class T>
void LinkedList<T>::deleteHead()
{
Node<T> temp;
temp=head;
head=head->next;
delete temp;
}

template <class T>
void LinkedList<T>::display()
{
Node<T> * temp=head;
while(temp)
{
cout<<temp->data<<"  " ;
temp=temp-next;
}
}
main()
{
LinkedList<int> ll;
ll.addHead(1);
ll.addHead(2);
ll.display();
}

  